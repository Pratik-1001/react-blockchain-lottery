[{"/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/index.js":"1","/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/reportWebVitals.js":"2","/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/App.js":"3","/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/Pages/web3.js":"4","/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/Pages/lottery.js":"5"},{"size":593,"mtime":1647627167176,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1618913490000,"results":"8","hashOfConfig":"7"},{"size":4623,"mtime":1647631552990,"results":"9","hashOfConfig":"7"},{"size":320,"mtime":1647574181819,"results":"10","hashOfConfig":"7"},{"size":964,"mtime":1647622207840,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"sdlpoo",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/index.js",[],["24","25"],"/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/reportWebVitals.js",[],"/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/App.js",["26","27","28","29","30"],"import logo from \"./bp32PizJ.png\";\nimport \"./App.css\";\nimport React from \"react\";\nimport web3 from './Pages/web3';\nimport lottery from \"./Pages/lottery\";\n\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nconst MySwal = withReactContent(Swal);\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      balance:'',\n      myWalletBalc:'',\n      Players:[],\n      accounts:[],\n      amtToPay:null\n    }\n  }\n\n  componentDidMount(){\n    this.myfunc();\n    setInterval(()=>{\n      let CWallet=0;\n      let MWallet=0;\n      \n      web3.eth.getBalance(lottery._address)\n              .then((res)=>{\n                CWallet=web3.utils.fromWei(res,'ether');\n              console.log(res);\n              this.setState({...this.state,balance:res});\n            })\n      web3.eth.getBalance(this.state.accounts[0])\n              .then((res)=>{\n                MWallet=web3.utils.fromWei(res,'ether');\n                console.log(res)\n                this.setState({...this.state,myWalletBalc:res});\n              })\n    \n    \n    },3000)\n  }\n  myfunc=async()=>{\n    const accounts = await web3.eth.getAccounts();\n    // .then((res)=>{\n      console.log(lottery.methods)\n    // });\n    const Players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery._address);\n    const myWalletBalc = await web3.eth.getBalance(accounts[0]);\n    this.setState({balance, Players, accounts,myWalletBalc})\n    // var t=await lottery.methods.manager().call();\n    // console.log(t)\n  }\n\n\n  sendEther=async (e)=>{\n    e.preventDefault();\n    const sendCoins = await lottery.methods.joinGame().send({\n      from:this.state.accounts[0],\n      value:web3.utils.toWei(this.state.amtToPay,'ether')\n    });\n\n    // const balance = await web3.eth.getBalance(lottery._address);\n    // this.setState({...this.state,balance})\n    \n    \n    console.log(sendCoins)\n  }\n  SelectWinner=async(e)=>{\n    e.preventDefault();\n     const w = await lottery.methods.selectWinner().send({\n       from:this.state.accounts[0]\n     });\n     console.log('w --- ',w)\n  }\n  render() {\n    \n    console.log(this.state)\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\"  style={{width:'8rem',height:'10rem'}}/>\n          <p>\n            <code><span className=\"text-white\">Contract Wallet: </span><span className={web3.utils.fromWei(this.state.balance, 'ether') ==0? 'danger':'safe'}>{web3.utils.fromWei(this.state.balance, 'ether')}</span> <span className=\"text-info\">Ether</span></code>\n          </p>\n            <div className=\"root-form-box\">\n              <form>\n              <div className=\"row\">\n                <div className=\"col-md-12 d-flex justify-content-center\">\n                  <div className=\"walletForm\">\n                      <div className=\"row\">\n                          <div className=\"col-md-12 \">\n                            <code><span className=\"text-white\">My Wallet Balance:</span> <span className={web3.utils.fromWei(this.state.myWalletBalc, 'ether') ==0? 'danger':'safe'}>{web3.utils.fromWei(this.state.myWalletBalc,'ether')}</span> <span className=\"text-info\">Ether</span></code>\n                          </div>\n                      </div>\n                      <div className=\"row\">\n                          <div className=\"col-md-6\">\n                            <code className=\"text-white\">Ether to Send</code>\n                          </div>\n                          <div className=\"col-md-6\">\n                              <input placeholder=\"Enter Ether\" value={this.state.amtToPay} onChange={(e)=>this.setState({...this.state,amtToPay:e.target.value})} className=\"form-control\" ></input>\n                          </div>\n                      </div>\n                      <div className=\"row mt-2\">\n                          <div className=\"col-md-12\">\n                          &nbsp;&nbsp;\n                              <button onClick={this.sendEther}\n                              className=\"btn btn-success\" style={{float:'right',marginLeft:'1rem'}}>Send</button> &nbsp;&nbsp;\n                              <button \n                              onClick={this.SelectWinner}\n                              className=\"btn btn-warning\" style={{float:'right'}}>Pick a Winner</button>&nbsp;&nbsp;\n                          </div>\n                      </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n            </div>\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n","/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/Pages/web3.js",[],"/Users/pratikchhetri/Documents/Ethereum/lottery-react/src/Pages/lottery.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":9,"column":7,"nodeType":"37","messageId":"38","endLine":9,"endColumn":13},{"ruleId":"35","severity":1,"message":"39","line":27,"column":11,"nodeType":"37","messageId":"38","endLine":27,"endColumn":18},{"ruleId":"35","severity":1,"message":"40","line":28,"column":11,"nodeType":"37","messageId":"38","endLine":28,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":88,"column":137,"nodeType":"43","messageId":"44","endLine":88,"endColumn":139},{"ruleId":"41","severity":1,"message":"42","line":97,"column":160,"nodeType":"43","messageId":"44","endLine":97,"endColumn":162},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'MySwal' is assigned a value but never used.","Identifier","unusedVar","'CWallet' is assigned a value but never used.","'MWallet' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]